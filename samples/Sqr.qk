/**
 * A simple sample Quack program
 */

class Pt(x: Int, y: Int) {
  this.x = x;
  this.y = y;

  def STR() : String {
      return "(" + this.x.STR() + ","
                 + this.y.STR() ;
  }

  def PLUS(other: Pt) : Pt {
      return Pt(this.x + other.x, this.y + other.y);
  }

  def _x() : Int { return this.x; }
  def _y() : Int {  return this.y; }
}

class Rect(ll: Pt, ur: Pt) extends Obj {
  this.ll = ll;
  this.ur = ur;

  def translate(delta: Pt) : Pt { return Rect(ll+Pt, ur+Pt); }

  def STR() : String {
      lr = Pt( this.ur._y(), this.ll._x() );  // lower right
      ul = Pt( this.ll._x(), this.ur._y() );  // upper left
      return "(" + this.ll.STR() + ", "
                 +      ul.STR() + ","
                 + this.ur.STR() + ","
                 +      lr.STR() + ")";
  }
}

class Square(ll: Pt, side: Int) extends Rect {
  ths.ll = ll;
  this.ur = Pt(this.ll._x() + side, this.ll._y() + side);
}

p1 = Pt(1, 3);
p2 = Pt(5, 6);
p3 = p1 + p2;
p3 = p1.PLUS(p3);

//a_square = Square( Pt(3,3), 5 );
//a_square = a_square.translate( Pt(2,2) );
//a_square.PRINT();

/* ERRORS */
//a_square.PRINT(;      // TODO: unclosed function call
//a_square.PRIN();      // call to nonexistence member
//a_square.PRINT;       // call member function as variable
